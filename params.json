{"name":"roboclone","tagline":"Clone FRC robot projects from Git and configure them for use with Eclipse","body":"### The Problem\r\nroboclone was created to solve the problem of there not being any good way to import code cloned from Git repositories into Eclipse. Typically your options are:\r\n * Check your IDE metadata files into Git (eww!)\r\n * Deal with not having a proper WPILib development environment\r\n * Do the [crazy 8-step hack](http://wiki.robockets.org/index.php?title=Setup_Eclipse) someone figured out once and put on your internal wiki\r\nNone of these solutions were good enough for me, so I created roboclone. With roboclone, cloning a repository from Git and having it ready for use in Eclipse is as easy as `roboclone <YOUR_REPO_HERE>`.\r\n\r\n### What Does roboclone Do? \r\nroboclone knows what files are necessary to have a good setup in Eclipse. When you use roboclone to clone a repository, it will perform the following steps:\r\n 1. Clone the repository using the system's Git executable (make sure Git is in the system path!)\r\n 2. Figure out the name of your project, and generate the necessary IDE metadata files\r\n 3. Write the IDE metadata files if there are none in the project folder (unless the user forces overwriting with the `--force` switch\r\n\r\n### Examples\r\n| Command | Description |\r\n|---------|-------------|\r\n| `roboclone <REPO>` | Clones the repository and writes metadata files if they don't already exist |\r\n| `roboclone <REPO> /tmp/my-project` | Same as above, but the project will be cloned to /tmp/my-project |\r\n| `roboclone --gitargs=\"--depth=1\" <REPO>` | Clone the repository and pass `--depth=1` to git |\r\n| `roboclone --force=true <REPO>` | Clone the repository and overwrite any existing IDE metadata files |\r\n\r\n### Authors\r\n@simon-andrews","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}